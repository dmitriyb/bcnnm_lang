package BCNNM_DSL.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ConditionWithFormula_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new DynamicMechanism_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Molecule_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MoleculeDefinition_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MoleculeDefinitionReference_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MoleculeReference_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new NamedConstant_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new NamedConstantReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new Molecule_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new MoleculeDefinitionReference_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new MoleculeReference_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new NamedConstantReference_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x5719c93ddd814255L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46c97db93e84b707L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46aac9d4f448aa46L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46aac9d4f447b0c3L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x6101bf7b1aa274b9L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46c97db93e84318eL), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46aac9d4f4483a03L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46c97db93e859c65L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46aac9d4f448aa46L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x6101bf7b1aa274b9L), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46c97db93e84318eL), MetaIdFactory.conceptId(0x9edcd71856d444c5L, 0xae868ea31c5d7fbbL, 0x46c97db93e859c65L)).seal();
}
